Develop a Photo Analyzer WebApp detailed below:

- Client App has the following pages:
  - Login/Registration page
  - Chart Page:
    - A large chart of degree values per day.  The app gets data from the server.
    - An Upload button at the bottom that allows the user to upload a photo (upload is done after some preprocessing described below).
    - Once a photo is selected and loaded to the app, the web app performs the following image manipulation using OpenCV library.
      - Totates to make the image to portrait (height > width) if needed.
      - Resizes the photo to JPEG format of width 1024px, while keeping the aspect ratio.
      - Tries to make the size smaller while keeping a certain level of the quality.
    - After the above mentioned processing, it uploads it to the server.
    - The server returns a float value of range 0 to 180 degrees calculated from the uploaded image (calculation algorithm is described separately).
    - The app updates the chart with the received value.  If it receives multiple values per day, it uses the newest value of the day.

- The server:
  - Uses OpenCV for image manipulations.
  - Has API to receive a photo:
    - Stores the image to the DB together with the timestamp and a hash key that is created for being used to specify the row later.
    - It then processes the image with OpenCV to calculate an angle of some specific feature of the image.  The angle calculation algorithm is:
      - First, convert the image into black and white with thresholding.
      - Then find the three largent contours.
      - Calculate the angle of the centers of the three contours; the angle of the 1st largest contour to the 2nd largest v.s. The 1st largest to the 3rd largest.
      - Normalize the angle to within 0 to 180 degrees.
    - It stores the calculated value with associating it  with the image that is already stored in the DB.
    - It returns the value.
  - The server also has an API to receive an array of timestamp, value, and key pairs for the client to draw the chart.  The API receives date range and returns an array of the data of specified range.
  - The server also has an API to retrieve the stored image from the key.

- Build environment: Vite

- Frontend
  - Use the following technologies:
    - Vue 3
    - Tailwind
  - Follow Material UI and shows clean look
  - Use OpenCV for the image processing

- Backend
  - use the following technologies:
    - Node.js
    - OpenCV for the image processing

Please ask me for any clarifications if needed
